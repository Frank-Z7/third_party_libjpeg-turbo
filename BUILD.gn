/*
 * Copyright (c) 2022 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

if (defined(ohos_lite)) {
  import("//build/lite/config/component/lite_component.gni")
} else {
  import("//build/ohos.gni")
}

jpeg_sources = [
  "jcapimin.c",
  "jcapistd.c",
  "jccoefct.c",
  "jccolor.c",
  "jcdctmgr.c",
  "jchuff.c",
  "jcicc.c",
  "jcinit.c",
  "jcmainct.c",
  "jcmarker.c",
  "jcmaster.c",
  "jcomapi.c",
  "jcparam.c",
  "jcphuff.c",
  "jcprepct.c",
  "jcsample.c",
  "jctrans.c",
  "jdapimin.c",
  "jdapistd.c",
  "jdatadst.c",
  "jdatasrc.c",
  "jdcoefct.c",
  "jdcolor.c",
  "jddctmgr.c",
  "jdhuff.c",
  "jdicc.c",
  "jdinput.c",
  "jdmainct.c",
  "jdmarker.c",
  "jdmaster.c",
  "jdmerge.c",
  "jdphuff.c",
  "jdpostct.c",
  "jdsample.c",
  "jdtrans.c",
  "jerror.c",
  "jfdctflt.c",
  "jfdctfst.c",
  "jfdctint.c",
  "jidctflt.c",
  "jidctfst.c",
  "jidctint.c",
  "jidctred.c",
  "jmemmgr.c",
  "jmemnobs.c",
  "jquant1.c",
  "jquant2.c",
  "jutils.c",
]

define_config = []

if (current_cpu == "arm" && !is_win) {
  jpeg_sources += [
    "simd/arm/jsimd.c",
    "simd/arm/jsimd_neon.S",
  ]
} else if (current_cpu == "arm64" && !is_win) {
  jpeg_sources += [
    "simd/arm64/jsimd.c",
    "simd/arm64/jsimd_neon.S",
  ]
} else {
  jpeg_sources += [ "jsimd_none.c" ]
}

if (!defined(ohos_lite)) {
  # enable arith codec
  jpeg_sources += [
    "jaricom.c",
    "jcarith.c",
    "jdarith.c",
  ]
  define_config += [
    "C_ARITH_CODING_SUPPORTED=1",  #Support arithmetic encoding
    "D_ARITH_CODING_SUPPORTED=1",  #Support arithmetic decoding
  ]
}

config("libjpeg_turbo_config") {
  include_dirs = [ "//third_party/libjpeg" ]
  defines = define_config
}

if (defined(ohos_lite)) {
  lite_library("libjpeg") {
    if (ohos_kernel_type == "liteos_m") {
      target_type = "static_library"
    } else {
      target_type = "shared_library"
    }
    sources = jpeg_sources
    public_configs = [ ":libjpeg_turbo_config" ]
  }
} else {
  ohos_static_library("libjpeg_static") {
    sources = jpeg_sources
    public_configs = [ ":libjpeg_turbo_config" ]
  }
}
